<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Hassen Harzallah</title><link>https://hhassen.github.io/posts/</link><description>Recent content in Posts on Hassen Harzallah</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 11 Sep 2025 10:00:00 +0000</lastBuildDate><atom:link href="https://hhassen.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>My Bitcoins almost disappeared forever: Fixing a Crashing Blockstream Green Lightning Wallet</title><link>https://hhassen.github.io/posts/2025/09/my-bitcoins-almost-disappeared-forever-fixing-a-crashing-blockstream-green-lightning-wallet/</link><pubDate>Thu, 11 Sep 2025 10:00:00 +0000</pubDate><guid>https://hhassen.github.io/posts/2025/09/my-bitcoins-almost-disappeared-forever-fixing-a-crashing-blockstream-green-lightning-wallet/</guid><description>I recently faced every Bitcoiner‚Äôs nightmare: I had just bought my first Bitcoin, set up Blockstream Green with a Lightning account, and suddenly the app on my Android phone started crashing immediately at startup. My Lightning funds were locked inside my phone, and unlike with on-chain Bitcoin, writing down my seed phrase wasn‚Äôt enough ‚Äî Lightning state lives on-device.
I contacted Blockstream support right away. Unfortunately, the process was long, and their answers didn‚Äôt solve anything:</description><content type="html"><![CDATA[<p>I recently faced every Bitcoiner‚Äôs nightmare: I had just bought my first Bitcoin, set up Blockstream Green with a Lightning account, and suddenly the app on my Android phone started crashing immediately at startup. My Lightning funds were locked inside my phone, and unlike with on-chain Bitcoin, writing down my seed phrase wasn‚Äôt enough ‚Äî Lightning state lives on-device.</p>
<p>I contacted Blockstream support right away. Unfortunately, the process was long, and their answers didn‚Äôt solve anything:</p>
<ul>
<li>They suggested updating the app ‚Äî but I was already on the latest version.</li>
<li>They suggested making a backup ‚Äî but for Lightning, a seed alone won‚Äôt restore your state.</li>
</ul>
<p>That‚Äôs when I realized: if I wanted to save my coins, I needed to find a solution myself.</p>
<hr>
<h2 id="step-1-back-up-everything-before-testing">Step 1: Back up everything before testing</h2>
<p>Before experimenting, I made sure to back up the app data. This was critical, because my Lightning channels lived inside my phone.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adb backup -apk -obb -shared com.greenaddress.greenbits_android_wallet
</span></span></code></pre></div><p>This backup contained a SQLite database with encrypted_data, pin_data, wallet_id, and network. It confirmed that both on-chain (electrum-mainnet) and Lightning (greenlight-mainnet) information was stored locally.</p>
<hr>
<h2 id="step-2-attempting-decryption-and-knowing-when-to-stop">Step 2: Attempting decryption (and knowing when to stop)</h2>
<p>I explored whether I could decrypt the stored data using my PIN and the app‚Äôs own encryption scheme:</p>
<p>üîê <strong>Encryption Algorithm Overview</strong></p>
<ul>
<li>Key derivation: PBKDF2 with HMAC-SHA512</li>
<li>Inputs: PIN + salt (base64-decoded) + 100,000 iterations</li>
<li>Output: 32-byte AES-256 key</li>
<li>Decryption: AES-256 in CBC mode; IV = first 16 bytes of <code>encrypted_data</code></li>
</ul>
<p>I tried writing a Python script to decrypt this, but after a few attempts I decided not to push further. Decrypting wasn‚Äôt the real goal ‚Äî restoring a working app environment was.</p>
<hr>
<h2 id="step-3-investigating-crash-logs-with-adb">Step 3: Investigating crash logs with ADB</h2>
<p>Next, I turned to logs.</p>
<p>Find the package name:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adb shell pm list packages | grep green
</span></span><span style="display:flex;"><span>com.blockstream.green
</span></span></code></pre></div><p>Find the running process ID:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adb shell pidof com.blockstream.green
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">12345</span>
</span></span></code></pre></div><p>Dump logs:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adb logcat --pid<span style="color:#f92672">=</span><span style="color:#ae81ff">12345</span> &gt; green_crash_log.txt
</span></span></code></pre></div><p>The logs revealed the issue:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>java.lang.IllegalArgumentException: Invalid notification <span style="color:#f92672">(</span>no valid small icon<span style="color:#f92672">)</span>
</span></span></code></pre></div><p>Translation: the app was trying to start a foreground service (likely for Lightning operations) but failed because the required <strong>notification icon</strong> was missing. This was a coding bug ‚Äî not data loss.</p>
<hr>
<h2 id="step-4-reinstall-attempts-and-support-dead-ends">Step 4: Reinstall attempts and support dead ends</h2>
<p>Support had advised me to update, but reinstalling the latest APK didn‚Äôt help. For example:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adb install -r blockstream_green.apk
</span></span><span style="display:flex;"><span>adb.exe: failed to install .<span style="color:#ae81ff">\B</span>lockstreamGreen-v4.1.8-productionGoogle-release.apk: Failure <span style="color:#f92672">[</span>INSTALL_FAILED_USER_RESTRICTED: Install canceled by user<span style="color:#f92672">]</span>
</span></span></code></pre></div><p>After enabling <strong>Allow USB installs</strong>, the reinstall worked:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adb.exe install -r .<span style="color:#ae81ff">\B</span>lockstreamGreen-v4.1.8-productionGoogle-release.apk
</span></span><span style="display:flex;"><span>Success
</span></span></code></pre></div><p>But the crash persisted.</p>
<p>At this point, I went beyond what support had suggested: try a downgrade.</p>
<hr>
<h2 id="step-5-downgrade-as-the-real-fix">Step 5: Downgrade as the real fix</h2>
<p>Attempting to install v4.1.5 at first failed:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adb.exe install -r .<span style="color:#ae81ff">\B</span>lockstreamGreen-v4.1.5-productionGoogle-release.apk
</span></span><span style="display:flex;"><span>adb.exe: failed to install .<span style="color:#ae81ff">\B</span>lockstreamGreen-v4.1.5-productionGoogle-release.apk: Failure <span style="color:#f92672">[</span>INSTALL_FAILED_VERSION_DOWNGRADE<span style="color:#f92672">]</span>
</span></span></code></pre></div><p>Solution: add the <code>-d</code> flag to force a downgrade.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>adb.exe install -r -d .<span style="color:#ae81ff">\B</span>lockstreamGreen-v4.1.5-productionGoogle-release.apk
</span></span><span style="display:flex;"><span>Performing Streamed Install
</span></span><span style="display:flex;"><span>Success
</span></span></code></pre></div><p>And just like that: the older version opened successfully, my wallet loaded, and my Lightning funds were safe.</p>
<hr>
<h2 id="conclusion-what-i-learned">Conclusion: what I learned</h2>
<ul>
<li>
<p><strong>Lightning is device-dependent.</strong> A seed phrase isn‚Äôt enough. Backups of the app state are critical.</p>
</li>
<li>
<p><strong>Support isn‚Äôt always enough.</strong> The official team couldn‚Äôt resolve this issue ‚Äî updating and backing up weren‚Äôt real fixes.</p>
</li>
<li>
<p><strong>Logs point to answers.</strong> ADB logcat gave me the exact reason for the crash: a missing notification icon.</p>
</li>
<li>
<p><strong>Downgrade = lifesaver.</strong> Reverting to v4.1.5 bypassed the bug and restored full access to my funds.</p>
</li>
<li>
<p><strong>The relief is unforgettable.</strong> After hours of uncertainty, finally seeing my wallet open again was the moment I knew I had saved my Bitcoin from vanishing.</p>
</li>
</ul>
<hr>
<p>‚ú® This experience taught me to always back up, to follow the data, and not to rely solely on official fixes when dealing with critical funds. Sometimes, the only way forward is persistence, patience, and a willingness to get your hands dirty with the technical details.</p>
]]></content></item><item><title>Monitoring to detect incidents</title><link>https://hhassen.github.io/posts/2021/12/monitoring-to-detect-incidents/</link><pubDate>Wed, 29 Dec 2021 10:10:23 +0200</pubDate><guid>https://hhassen.github.io/posts/2021/12/monitoring-to-detect-incidents/</guid><description>Recently, I have worked with a team developing a Spring Boot application. The application is deployed as a Java container in AWS and the logs are stored in Cloudwatch. The application was put behind an Nginx reverse proxy and Nginx logs are also stored in Cloudwatch. Every thing was going fine until they started adding new features that caused very high response times on the prod. Problems become more and more recurrent, developers were exhausted dealing with all this headache and users were very unsatisfied.</description><content type="html"><![CDATA[<p>Recently, I have worked with a team developing a Spring Boot application. The application is deployed as a Java container in AWS and the logs are stored in Cloudwatch.
The application was put behind an Nginx reverse proxy and Nginx logs are also stored in Cloudwatch.
<img src="https://raw.githubusercontent.com/hhassen/hhassen.github.io_source/master/resources/_gen/images/architecture.png" alt="application architecture"></p>
<p>Every thing was going fine until they started adding new features that caused very high response times on the prod. Problems become more and more recurrent, developers were exhausted dealing with all this headache and users were very unsatisfied.</p>
<p>I tried to help this team and the first step was to see what is going on. I found out that even developers struggle to get the real cause of problems and they often have to pass hours reading thousands of line of logs in Cloudwatch and the fixes they made were usually temporary.</p>
<p>For me, there was missing a crucial element for the functioning of any development team : monitoring. We had a lot of data in our possession but nothing was done to get useful information from that.</p>
<p>Thus, I decided to implement a monitoring solution using <code>Elasticsearch</code> and <code>Kibana</code>. First, I worked on sending all the information from Cloudwatch logs to Elasticsearch. I used <code>Filebeat</code> with the following input module : <code>AWS Cloudwatch Input</code> (<a href="https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-input-aws-cloudwatch.html)">https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-input-aws-cloudwatch.html)</a>. This module calls AWS API regularly to get new lines of logs.</p>
<p>In addition, I found out that an Actuator endpoint was available and developers use it to expose application metrics using <code>Prometheus</code> format. I used <code>Metricbeat</code> to scrap those metrics and send them to Elasticsearch (<a href="https://www.elastic.co/guide/en/beats/metricbeat/current/metricbeat-module-prometheus.html)">https://www.elastic.co/guide/en/beats/metricbeat/current/metricbeat-module-prometheus.html)</a>.</p>
<p>After ingesting and filtering data using <code>Logstash</code> and storing them in <code>Elasticsearch</code>, came the rewarding part of creating visualitions and dashboard in <code>Kibana</code>.</p>
<p>I have made out 2 different types of Dashboards:</p>
<h3 id="nginx-dashboard-user-experience-metrics">Nginx dashboard: user experience metrics</h3>
<p>This dashboard contains metrics about the user experience : number of requests, 500 errors, response time, visitors per day, OS, most visited URLs&hellip;
<img src="https://raw.githubusercontent.com/hhassen/hhassen.github.io_source/master/resources/_gen/images/nginx_dashboard.png" alt="nginx dashboard"></p>
<h3 id="prometheus-dashboard-application-metrics">Prometheus dashboard: application metrics</h3>
<p>This dashboard contains metrics about the java application : methods execution time, http requests, JVM metric, 500 errors by URL and by Stacktrace&hellip;
<img src="https://raw.githubusercontent.com/hhassen/hhassen.github.io_source/master/resources/_gen/images/prometheus_jvm.png" alt="prometheus dashboard">
<img src="https://raw.githubusercontent.com/hhassen/hhassen.github.io_source/master/resources/_gen/images/prometheus_500.png" alt="prometheus 500 errors dashboard"></p>
<h3 id="realcase-situation-of-detecting-an-incident">Realcase situation of detecting an incident</h3>
<p>Using this monitoring tool, I went back to a recent incident in Production and I tried to detect it just using the metrics I have.</p>
<p>Response time:
<img src="https://raw.githubusercontent.com/hhassen/hhassen.github.io_source/master/resources/_gen/images/response_time_incident.png" alt="incident detection response time">
Response time by HTTP path:
<img src="https://raw.githubusercontent.com/hhassen/hhassen.github.io_source/master/resources/_gen/images/response_time_http_incident.png" alt="incident detection response time by http path">
Execution time of java methods:
<img src="https://raw.githubusercontent.com/hhassen/hhassen.github.io_source/master/resources/_gen/images/response_time_methods_incident.png" alt="incident detection execution time of methods"></p>
<p>As I plotted the response time for that particular period, and guess what !! They went really up. I have also found out the following information:</p>
<ul>
<li><strong>Response time</strong> was already <strong>increasing</strong> for several days due to increasing number of users.</li>
<li>The business team <strong>reported the problem</strong> 1 day after incident.</li>
<li><strong>Developers were stuck</strong> for days not knowing were all of this came. They were manually <strong>reading logs</strong> in Cloudwatch.</li>
<li>A <strong>DB upsize</strong> was done 2 days after the incident was revealed and it helped improving situation.</li>
<li>A <strong>hotfix</strong> deliverd 4 days after the incident has been effective solving the problem.</li>
</ul>
<p>As we can see the monitoring solution does effectively help detect and even anticipate problems, as well as measuring the impact of adopted measures.</p>
<p>Now, with the information we have, we finally have <strong>happy developers and satisfied users</strong>.</p>
]]></content></item><item><title>Kubernetes project: deploy a Sentiment Analysis application</title><link>https://hhassen.github.io/posts/2020/06/kubernetes-project-deploy-a-sentiment-analysis-application/</link><pubDate>Sun, 28 Jun 2020 07:17:23 +0200</pubDate><guid>https://hhassen.github.io/posts/2020/06/kubernetes-project-deploy-a-sentiment-analysis-application/</guid><description>In this project, I have deployed a Sentiment Analysis application using Kubernetes on the cloud (Amazon EKS).
The application is composed of 3 main components:
Frontend App : uses React and Nginx to provide user interface Web App : developed with Java to communicate with backend Backend App : Logic part develeped with Python Please find more information in my repo.
Credits to Rinor Maloku for the code and the original article.</description><content type="html"><![CDATA[<p><img src="https://github.com/hhassen/k8s-app-sentiment/raw/master/images/App_sent_analyser_demo.gif" alt=""></p>
<p>In this project, I have deployed a Sentiment Analysis application using Kubernetes on the cloud (Amazon EKS).</p>
<p>The application is composed of 3 main components:</p>
<ol>
<li><strong>Frontend App</strong> : uses React and Nginx to provide user interface</li>
<li><strong>Web App</strong> : developed with Java to communicate with backend</li>
<li><strong>Backend App</strong> : Logic part develeped with Python</li>
</ol>
<p>Please find more information in my <a href="https://github.com/hhassen/k8s-app-sentiment">repo</a>.</p>
<p><img src="https://github.com/hhassen/k8s-app-sentiment/raw/master/images/App_sent_analyser_architecture.gif" alt=""></p>
<p>Credits to <a href="https://medium.freecodecamp.org/learn-kubernetes-in-under-3-hours-a-detailed-guide-to-orchestrating-containers-114ff420e882">Rinor Maloku</a> for the code and the original article.</p>
]]></content></item><item><title>Transf√©rer vos appels sur Skype</title><link>https://hhassen.github.io/posts/2019/07/transf%C3%A9rer-vos-appels-sur-skype/</link><pubDate>Thu, 18 Jul 2019 20:11:23 +0200</pubDate><guid>https://hhassen.github.io/posts/2019/07/transf%C3%A9rer-vos-appels-sur-skype/</guid><description>Proc√©dure pour recevoir vos appels t√©l√©phoniques en dehors de l&amp;rsquo;union europ√©en (ex: Tunisie), en utilisant un num√©ro fran√ßais Skype.
Remarque: cette m√©thode ne vous permet que de recevoir les appels, elle ne vous permet pas d&amp;rsquo;appeler vers la France.
Proc√©dure: Acheter un num√©ro fran√ßais Skype ( environ 8‚Ç¨/mois) https://www.skype.com/fr/features/online-number/ Le num√©ro a le format fran√ßais suivant : +33 09 xx xx xx. Lorsque quelqu&amp;rsquo;un appelle ce num√©ro, vous recevez un appel Skype normal (appel non t√©l√©phonique).</description><content type="html"><![CDATA[<p>Proc√©dure pour recevoir vos appels t√©l√©phoniques en dehors de l&rsquo;union europ√©en (ex: Tunisie), en utilisant un num√©ro fran√ßais Skype.</p>
<p><strong>Remarque:</strong> cette m√©thode ne vous permet que de recevoir les appels, elle <strong>ne vous permet pas</strong> d&rsquo;appeler vers la France.</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://media2.giphy.com/media/ff6IT8IzC5hEQ/giphy.gif" alt="telephone_gif"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="proc√©dure">Proc√©dure:</h2>
<ol>
<li>
<p><strong>Acheter un num√©ro fran√ßais Skype</strong> ( environ 8‚Ç¨/mois) <a href="https://www.skype.com/fr/features/online-number/">https://www.skype.com/fr/features/online-number/</a>
Le num√©ro a le format fran√ßais suivant : <strong>+33 09 xx xx xx</strong>. Lorsque quelqu&rsquo;un appelle ce num√©ro, vous recevez un appel Skype normal (appel non t√©l√©phonique). Donc, il faut que votre t√©l√©phone soit connect√© sur Wifi ou sur 4G.</p>
</li>
<li>
<p>Demander √† quelqu&rsquo;un en France d&rsquo;<strong>appeler ce nouveau num√©ro pour le tester</strong>. Normalement, vous recevez un appel Skype sur votre t√©l√©phone.</p>
</li>
<li>
<p><strong>Activer le renvoi d&rsquo;appels inconditionnel</strong> de votre puce fran√ßaise (ex: SFR) vers votre num√©ro Skype.
Donc, lorsque quelqu&rsquo;un vous appelle sur votre num√©ro fran√ßais (<strong>+33 06 xx xx xx</strong>), vous recevez cet appel directement sur votre Skype.</p>
</li>
</ol>
<p><img src="https://raw.githubusercontent.com/hhassen/hhassen.github.io_source/master/resources/_gen/images/transfer_appel_inconditionnel.png" alt="renvoi_appel"></p>
<ol start="4">
<li>Une fois le renvoi d&rsquo;appels est activ√©, <strong>enlever votre puce fran√ßaise</strong> de votre t√©l√©phone. Vous n&rsquo;en avez plus besoin maintenant.</li>
<li>Demander √† quelqu&rsquo;un en France d&rsquo;appeler votre num√©ro fran√ßais (+33 06 xx xx xx). Normalement, vous recevez cet appel sur Skype. Et voila!</li>
</ol>
<h2 id="je-nai-plus-besoin-de-mon-num√©ro-skype">Je n&rsquo;ai plus besoin de mon num√©ro Skype:</h2>
<ol>
<li>R√©silier votre offre Skype.</li>
<li>Metter la puce fran√ßaise et d√©sactiver le renvoi d&rsquo;appel inconditionnel.</li>
</ol>
<p>.</p>
]]></content></item><item><title>Initial Commit</title><link>https://hhassen.github.io/posts/2019/07/initial-commit/</link><pubDate>Sat, 13 Jul 2019 22:17:23 +0200</pubDate><guid>https://hhassen.github.io/posts/2019/07/initial-commit/</guid><description>Hello World!</description><content type="html"><![CDATA[<p><strong>Hello World!</strong></p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="https://i.gifer.com/Vho.gif" alt="partyparrot"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
]]></content></item></channel></rss>