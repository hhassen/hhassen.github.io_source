<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>elasticsearch on Hassen Harzallah</title><link>https://hhassen.github.io/tags/elasticsearch/</link><description>Recent content in elasticsearch on Hassen Harzallah</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 29 Dec 2021 10:10:23 +0200</lastBuildDate><atom:link href="https://hhassen.github.io/tags/elasticsearch/index.xml" rel="self" type="application/rss+xml"/><item><title>Monitoring to detect incidents</title><link>https://hhassen.github.io/posts/2021/12/monitoring-to-detect-incidents/</link><pubDate>Wed, 29 Dec 2021 10:10:23 +0200</pubDate><guid>https://hhassen.github.io/posts/2021/12/monitoring-to-detect-incidents/</guid><description>Recently, I have worked with a team developing a Spring Boot application. The application is deployed as a Java container in AWS and the logs are stored in Cloudwatch. The application was put behind an Nginx reverse proxy and Nginx logs are also stored in Cloudwatch. Every thing was going fine until they started adding new features that caused very high response times on the prod. Problems become more and more recurrent, developers were exhausted dealing with all this headache and users were very unsatisfied.</description></item></channel></rss>